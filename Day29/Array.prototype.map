Implementing Array.prototype.map in JavaScript

Understanding the map() Method
_____________________________________
Before diving into the implementation, let's review how map() works:
ðŸ”µ Syntax: array.map(callback(currentValue[, index[, array]])[, thisArg])
ðŸ”µParameters:
 ðŸ”¹ callback: Function to execute on each element of the array, taking three arguments:
ðŸ”¹currentValue: The current element being processed in the array.
ðŸ”¹index (optional): The index of the current element being processed.
ðŸ”¹array (optional): The array map was called upon.
ðŸ”¹thisArg (optional): Value to use as this when executing callback.
ðŸ”¹Return value: A new array with each element being the result of the callback function.

Implementing our own map() Function
___________________________________________

Do check out the attached js file in the folder for our own map function Implementation.

Conclusion:
Implementing Array.prototype.map is a great exercise to deepen our understanding of higher-order functions in JavaScript. 
By creating our own version, we gain insight into how such methods work under the hood and can customize them to suit specific needs. 
